{"version":3,"sources":["shared/cardContents.js","reducers/actions.js","reducers/gameReducer.js","shared/actionTypes.js","shared/gameStates.js","components/Card/Card.js","containers/Game/Game.js","App.js","index.js"],"names":["cardContents","cloneCards","cards","map","c","id","pairFound","revealed","content","getShuffledCards","pairs","length","Error","cardId","slice","forEach","cc","card","push","shuffledCards","cardIndex","Math","floor","random","splice","gameReducer","game","action","type","status","canPick","picks","moves","actions","cardToRevealIndex","findIndex","updatedCards","revealedCards","filter","firstRevealedCardIndex","secondRevealedCardIndex","updatedStatus","getCardClassName","cardClassName","Card","cardClicked","className","onClick","role","initialGame","Game","useReducer","dispatch","useEffect","setTimeout","getStatusSpan","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce973c39.chunk.js","sourcesContent":["const cardContents = [\r\n    '\\u{1F40D}', // snake\r\n    '\\u{1F99C}', // parrot\r\n    '\\u{1F40B}', // whale\r\n    '\\u{1F413}', // rooster\r\n    '\\u{1F40C}', // snail\r\n    '\\u{1F41C}', // ant\r\n    '\\u{1F418}', // elephant\r\n    '\\u{1F416}', // pig\r\n];\r\n\r\nexport default cardContents;","import cardContents from '../shared/cardContents';\r\nimport * as gameStates from '../shared/gameStates';\r\n\r\nconst cloneCards = (cards) => {\r\n    return cards.map(c => {\r\n        return {\r\n            id: c.id,\r\n            pairFound: c.pairFound,\r\n            revealed: c.revealed,\r\n            content: c.content\r\n        };\r\n    });\r\n};\r\n\r\nconst getShuffledCards = pairs => {\r\n    const cards = [];\r\n\r\n    if (pairs > cardContents.length) {\r\n        throw new Error('Invalid pair number. Reduce pair number or create more card contents!');\r\n    }\r\n\r\n    let cardId = 0;\r\n\r\n    [...cardContents].slice(0, pairs).forEach(cc => {\r\n        const card = {\r\n            id: cardId++,\r\n            pairFound: false,\r\n            revealed: false,\r\n            content: cc\r\n        };\r\n        \r\n        cards.push(card);\r\n        cards.push({...card, id: cardId++});\r\n    });\r\n    \r\n    const shuffledCards = [];\r\n\r\n    while (cards.length > 0) {\r\n        const cardIndex = Math.floor(Math.random() * cards.length);\r\n\r\n        shuffledCards.push(cards[cardIndex]);\r\n        cards.splice(cardIndex, 1);\r\n    }\r\n\r\n    return shuffledCards;\r\n};\r\n\r\nexport const init = (game, pairs) => {\r\n    const updatedGame = {\r\n        ...game,\r\n        status: gameStates.GUESS,\r\n        canPick: true,\r\n        picks: 0,\r\n        moves: 0,\r\n        cards: getShuffledCards(pairs)\r\n    };\r\n\r\n    return updatedGame;\r\n};\r\n\r\nexport const cardClick = (game, id) => {\r\n    const cardToRevealIndex = game.cards.findIndex(c => c.id === id);\r\n    const updatedCards = cloneCards(game.cards);    \r\n    \r\n    const cardToReveal = updatedCards[cardToRevealIndex];\r\n    cardToReveal.revealed = true;\r\n\r\n    return {\r\n        ...game,\r\n        status: gameStates.GUESS,\r\n        picks: game.picks + 1,\r\n        cards: updatedCards\r\n    };\r\n};\r\n\r\nexport const checkPair = (game) => {\r\n    const revealedCards = game.cards.filter(c => c.revealed && !c.pairFound);\r\n    const updatedCards = cloneCards(game.cards);\r\n    const firstRevealedCardIndex = updatedCards.findIndex(c => c.id === revealedCards[0].id);\r\n    const secondRevealedCardIndex = updatedCards.findIndex(c => c.id === revealedCards[1].id);\r\n    const isMatch = revealedCards[0].content === revealedCards[1].content;\r\n    let updatedStatus = gameStates.WRONG;\r\n\r\n    if (isMatch) {\r\n        updatedCards[firstRevealedCardIndex].pairFound = true;\r\n        updatedCards[secondRevealedCardIndex].pairFound = true;\r\n\r\n        updatedStatus = gameStates.MATCH;\r\n\r\n        if (updatedCards.filter(c => c.pairFound).length === updatedCards.length) {\r\n            updatedStatus = gameStates.WIN;\r\n        }\r\n    } else {\r\n        updatedCards[firstRevealedCardIndex].revealed = false;\r\n        updatedCards[secondRevealedCardIndex].revealed = false;\r\n    }\r\n\r\n    return { \r\n        ...game,\r\n        moves: game.moves + 1,\r\n        status: updatedStatus,\r\n        picks: 0,\r\n        cards: updatedCards,\r\n        canPick: true\r\n    };\r\n};\r\n\r\nexport const setCanPick = (game, canPick) => {\r\n    return {\r\n        ...game,\r\n        canPick: canPick\r\n    };\r\n};","import * as actionTypes from '../shared/actionTypes';\r\nimport * as actions from './actions';\r\n\r\nconst gameReducer = (game, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.INIT: return actions.init(game, action.pairs);\r\n        case actionTypes.CARD_CLICK: return actions.cardClick(game, action.id);\r\n        case actionTypes.CHECK_PAIR: return actions.checkPair(game);\r\n        case actionTypes.SET_CAN_PICK: return actions.setCanPick(game, action.canPick);\r\n        default: throw new Error('Invalid action type!');\r\n    }\r\n};\r\n\r\nexport default gameReducer;","export const INIT = 'init';\r\nexport const CARD_CLICK = 'cardClick';\r\nexport const CHECK_PAIR = 'checkPair';\r\nexport const SET_CAN_PICK = 'setCanPick';","export const MATCH = 'match';\r\nexport const WRONG = 'wrong';\r\nexport const GUESS = 'guess';\r\nexport const WIN = 'win';","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst CARD_CLASS = 'card';\r\nconst REVEALED_CLASS = 'revealed';\r\nconst PAIR_FOUND_CLASS = 'pair-found';\r\n\r\nconst getCardClassName = (revealed, pairFound) => {\r\n    let cardClassName = CARD_CLASS;\r\n\r\n    if (pairFound) {\r\n        cardClassName = `${cardClassName} ${PAIR_FOUND_CLASS}`;\r\n    } else if (revealed) {\r\n        cardClassName = `${cardClassName} ${REVEALED_CLASS}`;\r\n    }\r\n\r\n    return cardClassName;\r\n};\r\n\r\nconst Card = ({content, revealed, pairFound, cardClicked}) => {\r\n    return <div className={getCardClassName(revealed, pairFound)} onClick={cardClicked}>\r\n        {revealed && <span className={REVEALED_CLASS} role=\"img\">{content}</span>}\r\n    </div>;\r\n};\r\n\r\nexport default Card;","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport './Game.css';\r\nimport gameReducer from '../../reducers/gameReducer';\r\n\r\nimport Card from '../../components/Card/Card';\r\nimport * as actionTypes from '../../shared/actionTypes';\r\nimport * as gameStates from '../../shared/gameStates';\r\n\r\nconst PAIRS = 8;\r\n\r\nconst initialGame = {\r\n    status: gameStates.GUESS,\r\n    canPick: true,\r\n    picks: 0,\r\n    moves: 0,\r\n    cards: []\r\n};\r\n\r\nconst Game = () => {\r\n    const [game, dispatch] = useReducer(gameReducer, initialGame);\r\n\r\n    useEffect(() => {\r\n        dispatch({type: actionTypes.INIT, pairs: PAIRS});\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (game.picks === 2) {\r\n            dispatch({type: actionTypes.SET_CAN_PICK, canPick: false});\r\n        }\r\n    }, [game.picks]);\r\n\r\n    useEffect(() => {\r\n        if (!game.canPick) {\r\n            setTimeout(() => {\r\n                dispatch({type: actionTypes.CHECK_PAIR});\r\n            }, 1000);\r\n        }\r\n    }, [game.canPick])\r\n\r\n    const onRestartClicked = () => {\r\n        if (game.moves > 0 && game.canPick) {\r\n            dispatch({type: actionTypes.INIT, pairs: PAIRS});\r\n        }\r\n    };\r\n\r\n    const onCardClicked = (id, revealed) => {\r\n        if (game.canPick && !revealed) {\r\n            dispatch({type: actionTypes.CARD_CLICK, id: id});\r\n        }\r\n    };\r\n\r\n    const getStatusSpan = () => {\r\n        switch (game.status) {\r\n            case gameStates.MATCH: return <span className=\"match\">It's a match!</span>;\r\n            case gameStates.WIN: return <span className=\"win\">You have won!</span>;\r\n            default: return <span></span>;\r\n        }\r\n    };\r\n    \r\n    return <div className=\"game\">\r\n        <div className=\"header\">\r\n            <div className=\"status\">\r\n                <span>Moves: {game.moves}</span>\r\n                {getStatusSpan()}\r\n                <button className={game.moves === 0 || !game.canPick ? 'disabled' : ''} onClick={onRestartClicked}>Restart</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"game-area\">\r\n            {game.cards.map(c => <Card key={`card_${c.id}`} {...c} cardClicked={() => {onCardClicked(c.id, c.revealed)}} />)}\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nexport default Game;","import React from 'react';\nimport Game from './containers/Game/Game';\n\nconst App = () => <Game />;\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}